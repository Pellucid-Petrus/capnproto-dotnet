//Generated by Cap'n Proto compiler, DO NOT EDIT
//source: addressbook.capnp

using System;
using System.Diagnostics;
using Capnproto;

namespace Capnproto.Examples
{
public sealed class Addressbook
{
	public static class Person
	{
		public static readonly Capnproto.StructSize StructSize = new Capnproto.StructSize((short)1, (short)4);
		public sealed class Factory : Capnproto.StructFactory<Builder, Reader>
		{
			public Factory()
			{
			}
			public sealed override Reader ConstructReader(Capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit)
			{
				return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
			}
			public sealed override Builder constructBuilder(Capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount)
			{
				return new Builder(segment, data, pointers, dataSize, pointerCount);
			}
			public sealed override Capnproto.StructSize StructSize()
			{
				return Person.StructSize;
			}
			public sealed override Reader AsReader(Builder builder)
			{
				return builder.AsReader();
			}
		}
		public static readonly Factory SingleFactory = new Factory();
		public static readonly Capnproto.StructList.Factory<Builder,Reader> ListFactory = new Capnproto.StructList.Factory<Builder, Reader>(SingleFactory);
		
		public sealed class Builder : Capnproto.StructBuilder
		{
			internal Builder(Capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount)
			    : base(segment, data, pointers, dataSize, pointerCount)
			{
			}
			public Reader AsReader()
			{
				return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
			}
			public uint GetId()
			{
				return _getUintField(0);
			}
			public void SetId(uint value)
			{
				_setUintField(0, value);
			}
			
			public bool HasName()
			{
				return !_pointerFieldIsNull(0);
			}
			public Capnproto.Text.Builder GetName()
			{
				return _getPointerField(Capnproto.Text.SingleFactory, 0, null, 0, 0);
			}
			public void SetName(Capnproto.Text.Reader value)
			{
				_setPointerField(Capnproto.Text.SingleFactory, 0, value);
			}
			public void SetName(String value)
			{
				_setPointerField(Capnproto.Text.SingleFactory, 0, new Capnproto.Text.Reader(value));
			}
			public Capnproto.Text.Builder InitName(int size)
			{
				return _initPointerField(Capnproto.Text.SingleFactory, 0, size);
			}
			public bool HasEmail()
			{
				return !_pointerFieldIsNull(1);
			}
			public Capnproto.Text.Builder GetEmail()
			{
				return _getPointerField(Capnproto.Text.SingleFactory, 1, null, 0, 0);
			}
			public void SetEmail(Capnproto.Text.Reader value)
			{
				_setPointerField(Capnproto.Text.SingleFactory, 1, value);
			}
			public void SetEmail(String value)
			{
				_setPointerField(Capnproto.Text.SingleFactory, 1, new Capnproto.Text.Reader(value));
			}
			public Capnproto.Text.Builder InitEmail(int size)
			{
				return _initPointerField(Capnproto.Text.SingleFactory, 1, size);
			}
			public bool HasPhones()
			{
				return !_pointerFieldIsNull(2);
			}
			public Capnproto.StructList.Builder<Capnproto.Examples.Addressbook.Person.PhoneNumber.Builder> GetPhones()
			{
				return _getPointerField(Capnproto.Examples.Addressbook.Person.PhoneNumber.ListFactory, 2, null, 0);
			}
			public void SetPhones(Capnproto.StructList.Reader<Capnproto.Examples.Addressbook.Person.PhoneNumber.Reader> value)
			{
				_setPointerField(Capnproto.Examples.Addressbook.Person.PhoneNumber.ListFactory, 2, value);
			}
			public Capnproto.StructList.Builder<Capnproto.Examples.Addressbook.Person.PhoneNumber.Builder> InitPhones(int size)
			{
				return _initPointerField(Capnproto.Examples.Addressbook.Person.PhoneNumber.ListFactory, 2, size);
			}
			public Employment.Builder GetEmployment()
			{
				return new Person.Employment.Builder(segment, data, pointers, dataSize, pointerCount);
			}
			public Employment.Builder InitEmployment()
			{
				_setUshortField(2, (ushort)0);
				_clearPointerField(3);
				return new Person.Employment.Builder(segment, data, pointers, dataSize, pointerCount);
			}
			
		}
		
		public sealed class Reader : Capnproto.StructReader
		{
			internal Reader(Capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit)
			    : base(segment, data, pointers, dataSize, pointerCount, nestingLimit)
			{
			}
			
			public uint GetId()
			{
				return _getUintField(0);
			}
			
			public bool HasName()
			{
				return !_pointerFieldIsNull(0);
			}
			public Capnproto.Text.Reader GetName()
			{
				return _getPointerField(Capnproto.Text.SingleFactory, 0, null, 0, 0);
			}
			
			public bool HasEmail()
			{
				return !_pointerFieldIsNull(1);
			}
			public Capnproto.Text.Reader GetEmail()
			{
				return _getPointerField(Capnproto.Text.SingleFactory, 1, null, 0, 0);
			}
			
			public bool HasPhones()
			{
				return !_pointerFieldIsNull(2);
			}
			public Capnproto.StructList.Reader<Capnproto.Examples.Addressbook.Person.PhoneNumber.Reader> GetPhones()
			{
				return _getPointerField(Capnproto.Examples.Addressbook.Person.PhoneNumber.ListFactory, 2, null, 0);
			}
			
			public Employment.Reader GetEmployment()
			{
				return new Person.Employment.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
			}
			
		}
		
		public static class PhoneNumber
		{
			public static readonly Capnproto.StructSize StructSize = new Capnproto.StructSize((short)1, (short)1);
			public sealed class Factory : Capnproto.StructFactory<Builder, Reader>
			{
				public Factory()
				{
				}
				public sealed override Reader ConstructReader(Capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit)
				{
					return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
				}
				public sealed override Builder constructBuilder(Capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount)
				{
					return new Builder(segment, data, pointers, dataSize, pointerCount);
				}
				public sealed override Capnproto.StructSize StructSize()
				{
					return Person.PhoneNumber.StructSize;
				}
				public sealed override Reader AsReader(Builder builder)
				{
					return builder.AsReader();
				}
			}
			public static readonly Factory SingleFactory = new Factory();
			public static readonly Capnproto.StructList.Factory<Builder,Reader> ListFactory = new Capnproto.StructList.Factory<Builder, Reader>(SingleFactory);
			
			public sealed class Builder : Capnproto.StructBuilder
			{
				internal Builder(Capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount)
				    : base(segment, data, pointers, dataSize, pointerCount)
				{
				}
				public Reader AsReader()
				{
					return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
				}
				public bool HasNumber()
				{
					return !_pointerFieldIsNull(0);
				}
				public Capnproto.Text.Builder GetNumber()
				{
					return _getPointerField(Capnproto.Text.SingleFactory, 0, null, 0, 0);
				}
				public void SetNumber(Capnproto.Text.Reader value)
				{
					_setPointerField(Capnproto.Text.SingleFactory, 0, value);
				}
				public void SetNumber(String value)
				{
					_setPointerField(Capnproto.Text.SingleFactory, 0, new Capnproto.Text.Reader(value));
				}
				public Capnproto.Text.Builder InitNumber(int size)
				{
					return _initPointerField(Capnproto.Text.SingleFactory, 0, size);
				}
				public Capnproto.Examples.Addressbook.Person.PhoneNumber.Type GetType()
				{
					switch(_getShortField(0))
					{
						case 0: return Capnproto.Examples.Addressbook.Person.PhoneNumber.Type.Mobile;
						case 1: return Capnproto.Examples.Addressbook.Person.PhoneNumber.Type.Home;
						case 2: return Capnproto.Examples.Addressbook.Person.PhoneNumber.Type.Work;
						default: return Capnproto.Examples.Addressbook.Person.PhoneNumber.Type._NOT_IN_SCHEMA;
					}
				}
				public void SetType(Capnproto.Examples.Addressbook.Person.PhoneNumber.Type value)
				{
					_setShortField(0, (short)value);
				}
				
			}
			
			public sealed class Reader : Capnproto.StructReader
			{
				internal Reader(Capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit)
				    : base(segment, data, pointers, dataSize, pointerCount, nestingLimit)
				{
				}
				
				public bool HasNumber()
				{
					return !_pointerFieldIsNull(0);
				}
				public Capnproto.Text.Reader GetNumber()
				{
					return _getPointerField(Capnproto.Text.SingleFactory, 0, null, 0, 0);
				}
				
				public Capnproto.Examples.Addressbook.Person.PhoneNumber.Type GetType()
				{
					switch(_getShortField(0))
					{
						case 0: return Capnproto.Examples.Addressbook.Person.PhoneNumber.Type.Mobile;
						case 1: return Capnproto.Examples.Addressbook.Person.PhoneNumber.Type.Home;
						case 2: return Capnproto.Examples.Addressbook.Person.PhoneNumber.Type.Work;
						default: return Capnproto.Examples.Addressbook.Person.PhoneNumber.Type._NOT_IN_SCHEMA;
					}
				}
				
			}
			
			public enum Type
			{
				Mobile,
				Home,
				Work,
				_NOT_IN_SCHEMA,
			}
			
		}
		
		
		public static class Employment
		{
			public static readonly Capnproto.StructSize StructSize = new Capnproto.StructSize((short)1, (short)4);
			public sealed class Factory : Capnproto.StructFactory<Builder, Reader>
			{
				public Factory()
				{
				}
				public sealed override Reader ConstructReader(Capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit)
				{
					return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
				}
				public sealed override Builder constructBuilder(Capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount)
				{
					return new Builder(segment, data, pointers, dataSize, pointerCount);
				}
				public sealed override Capnproto.StructSize StructSize()
				{
					return Person.Employment.StructSize;
				}
				public sealed override Reader AsReader(Builder builder)
				{
					return builder.AsReader();
				}
			}
			public static readonly Factory SingleFactory = new Factory();
			public static readonly Capnproto.StructList.Factory<Builder,Reader> ListFactory = new Capnproto.StructList.Factory<Builder, Reader>(SingleFactory);
			
			public sealed class Builder : Capnproto.StructBuilder
			{
				internal Builder(Capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount)
				    : base(segment, data, pointers, dataSize, pointerCount)
				{
				}
				public Which Which
				{
					get
					{
						switch(_getShortField(2))
						{
							case 0: return Which.Unemployed;
							case 1: return Which.Employer;
							case 2: return Which.School;
							case 3: return Which.SelfEmployed;
							default: return Which._NOT_IN_SCHEMA;
						}
					}
				}
				public Reader AsReader()
				{
					return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
				}
				public bool IsUnemployed()
				{
					return Which == Person.Employment.Which.Unemployed;
				}
				public Capnproto.Void GetUnemployed()
				{
					Debug.Assert(Which == Person.Employment.Which.Unemployed,
					            "Must check which() before get()ing a union member.");
					return Capnproto.Void.VOID;
				}
				public void SetUnemployed(Capnproto.Void value)
				{
					_setShortField(2, (short)Person.Employment.Which.Unemployed);
				}
				
				public bool IsEmployer()
				{
					return Which == Person.Employment.Which.Employer;
				}
				public bool HasEmployer()
				{
					if(Which != Person.Employment.Which.Employer)
						return false;
					return !_pointerFieldIsNull(3);
				}
				public Capnproto.Text.Builder GetEmployer()
				{
					return _getPointerField(Capnproto.Text.SingleFactory, 3, null, 0, 0);
				}
				public void SetEmployer(Capnproto.Text.Reader value)
				{
					_setShortField(2, (short)Person.Employment.Which.Employer);
					_setPointerField(Capnproto.Text.SingleFactory, 3, value);
				}
				public void SetEmployer(String value)
				{
					_setShortField(2, (short)Person.Employment.Which.Employer);
					_setPointerField(Capnproto.Text.SingleFactory, 3, new Capnproto.Text.Reader(value));
				}
				public Capnproto.Text.Builder InitEmployer(int size)
				{
					_setShortField(2, (short)Person.Employment.Which.Employer);
					return _initPointerField(Capnproto.Text.SingleFactory, 3, size);
				}
				public bool IsSchool()
				{
					return Which == Person.Employment.Which.School;
				}
				public bool HasSchool()
				{
					if(Which != Person.Employment.Which.School)
						return false;
					return !_pointerFieldIsNull(3);
				}
				public Capnproto.Text.Builder GetSchool()
				{
					return _getPointerField(Capnproto.Text.SingleFactory, 3, null, 0, 0);
				}
				public void SetSchool(Capnproto.Text.Reader value)
				{
					_setShortField(2, (short)Person.Employment.Which.School);
					_setPointerField(Capnproto.Text.SingleFactory, 3, value);
				}
				public void SetSchool(String value)
				{
					_setShortField(2, (short)Person.Employment.Which.School);
					_setPointerField(Capnproto.Text.SingleFactory, 3, new Capnproto.Text.Reader(value));
				}
				public Capnproto.Text.Builder InitSchool(int size)
				{
					_setShortField(2, (short)Person.Employment.Which.School);
					return _initPointerField(Capnproto.Text.SingleFactory, 3, size);
				}
				public bool IsSelfEmployed()
				{
					return Which == Person.Employment.Which.SelfEmployed;
				}
				public Capnproto.Void GetSelfEmployed()
				{
					Debug.Assert(Which == Person.Employment.Which.SelfEmployed,
					            "Must check which() before get()ing a union member.");
					return Capnproto.Void.VOID;
				}
				public void SetSelfEmployed(Capnproto.Void value)
				{
					_setShortField(2, (short)Person.Employment.Which.SelfEmployed);
				}
				
			}
			
			public sealed class Reader : Capnproto.StructReader
			{
				internal Reader(Capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit)
				    : base(segment, data, pointers, dataSize, pointerCount, nestingLimit)
				{
				}
				
				public Which Which
				{
					get
					{
						switch(_getShortField(2))
						{
							case 0: return Which.Unemployed;
							case 1: return Which.Employer;
							case 2: return Which.School;
							case 3: return Which.SelfEmployed;
							default: return Which._NOT_IN_SCHEMA;
						}
					}
				}
				public bool IsUnemployed()
				{
					return Which == Person.Employment.Which.Unemployed;
				}
				public Capnproto.Void GetUnemployed()
				{
					Debug.Assert(Which == Person.Employment.Which.Unemployed,
					            "Must check which() before get()ing a union member.");
					return Capnproto.Void.VOID;
				}
				
				public bool IsEmployer()
				{
					return Which == Person.Employment.Which.Employer;
				}
				public bool HasEmployer()
				{
					if(Which != Person.Employment.Which.Employer)
						return false;
					return !_pointerFieldIsNull(3);
				}
				public Capnproto.Text.Reader GetEmployer()
				{
					return _getPointerField(Capnproto.Text.SingleFactory, 3, null, 0, 0);
				}
				
				public bool IsSchool()
				{
					return Which == Person.Employment.Which.School;
				}
				public bool HasSchool()
				{
					if(Which != Person.Employment.Which.School)
						return false;
					return !_pointerFieldIsNull(3);
				}
				public Capnproto.Text.Reader GetSchool()
				{
					return _getPointerField(Capnproto.Text.SingleFactory, 3, null, 0, 0);
				}
				
				public bool IsSelfEmployed()
				{
					return Which == Person.Employment.Which.SelfEmployed;
				}
				public Capnproto.Void GetSelfEmployed()
				{
					Debug.Assert(Which == Person.Employment.Which.SelfEmployed,
					            "Must check which() before get()ing a union member.");
					return Capnproto.Void.VOID;
				}
				
			}
			
			public enum Which
			{
				Unemployed,
				Employer,
				School,
				SelfEmployed,
				_NOT_IN_SCHEMA,
			}
		}
		
		
	}
	
	
	public static class AddressBook
	{
		public static readonly Capnproto.StructSize StructSize = new Capnproto.StructSize((short)0, (short)1);
		public sealed class Factory : Capnproto.StructFactory<Builder, Reader>
		{
			public Factory()
			{
			}
			public sealed override Reader ConstructReader(Capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit)
			{
				return new Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
			}
			public sealed override Builder constructBuilder(Capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount)
			{
				return new Builder(segment, data, pointers, dataSize, pointerCount);
			}
			public sealed override Capnproto.StructSize StructSize()
			{
				return AddressBook.StructSize;
			}
			public sealed override Reader AsReader(Builder builder)
			{
				return builder.AsReader();
			}
		}
		public static readonly Factory SingleFactory = new Factory();
		public static readonly Capnproto.StructList.Factory<Builder,Reader> ListFactory = new Capnproto.StructList.Factory<Builder, Reader>(SingleFactory);
		
		public sealed class Builder : Capnproto.StructBuilder
		{
			internal Builder(Capnproto.SegmentBuilder segment, int data, int pointers, int dataSize, short pointerCount)
			    : base(segment, data, pointers, dataSize, pointerCount)
			{
			}
			public Reader AsReader()
			{
				return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
			}
			public bool HasPeople()
			{
				return !_pointerFieldIsNull(0);
			}
			public Capnproto.StructList.Builder<Capnproto.Examples.Addressbook.Person.Builder> GetPeople()
			{
				return _getPointerField(Capnproto.Examples.Addressbook.Person.ListFactory, 0, null, 0);
			}
			public void SetPeople(Capnproto.StructList.Reader<Capnproto.Examples.Addressbook.Person.Reader> value)
			{
				_setPointerField(Capnproto.Examples.Addressbook.Person.ListFactory, 0, value);
			}
			public Capnproto.StructList.Builder<Capnproto.Examples.Addressbook.Person.Builder> InitPeople(int size)
			{
				return _initPointerField(Capnproto.Examples.Addressbook.Person.ListFactory, 0, size);
			}
		}
		
		public sealed class Reader : Capnproto.StructReader
		{
			internal Reader(Capnproto.SegmentReader segment, int data, int pointers, int dataSize, short pointerCount, int nestingLimit)
			    : base(segment, data, pointers, dataSize, pointerCount, nestingLimit)
			{
			}
			
			public bool HasPeople()
			{
				return !_pointerFieldIsNull(0);
			}
			public Capnproto.StructList.Reader<Capnproto.Examples.Addressbook.Person.Reader> GetPeople()
			{
				return _getPointerField(Capnproto.Examples.Addressbook.Person.ListFactory, 0, null, 0);
			}
			
		}
		
	}
	
	
	public sealed class Schemas
	{
		public static readonly Capnproto.SegmentReader b_98808e9832e8bc18 =
		    Capnproto.GeneratedClassSupport.decodeRawBytes(
		    "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
		    "\u0018\u00bc\u00e8\u0032\u0098\u008e\u0080\u0098" +
		    "\u0012\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
		    "\u0074\u00e1\u006e\u00f8\u0019\u002e\u00b3\u009e" +
		    "\u0004\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0015\u0000\u0000\u0000\u00ca\u0000\u0000\u0000" +
		    "\u0021\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u002d\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u0062" +
		    "\u006f\u006f\u006b\u002e\u0063\u0061\u0070\u006e" +
		    "\u0070\u003a\u0050\u0065\u0072\u0073\u006f\u006e" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
		    "\u00d0\u008a\u009e\u009c\u00b2\u0090\u004e\u0081" +
		    "\u0001\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
		    "\u0050\u0068\u006f\u006e\u0065\u004e\u0075\u006d" +
		    "\u0062\u0065\u0072\u0000\u0000\u0000\u0000\u0000" +
		    "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u007d\u0000\u0000\u0000\u001a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
		    "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0081\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u007c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u0088\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
		    "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
		    "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0085\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
		    "\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
		    "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0089\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u00a0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
		    "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u003d\u0069\u00c3\u00bd\u00d4\u002b\u000b\u00bb" +
		    "\u009d\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0069\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
		    "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0065\u006d\u0061\u0069\u006c\u0000\u0000\u0000" +
		    "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0070\u0068\u006f\u006e\u0065\u0073\u0000\u0000" +
		    "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u00d0\u008a\u009e\u009c\u00b2\u0090\u004e\u0081" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0065\u006d\u0070\u006c\u006f\u0079\u006d\u0065" +
		    "\u006e\u0074\u0000\u0000\u0000\u0000\u0000\u0000" + "");
		public static readonly Capnproto.SegmentReader b_814e90b29c9e8ad0 =
		    Capnproto.GeneratedClassSupport.decodeRawBytes(
		    "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
		    "\u00d0\u008a\u009e\u009c\u00b2\u0090\u004e\u0081" +
		    "\u0019\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
		    "\u0018\u00bc\u00e8\u0032\u0098\u008e\u0080\u0098" +
		    "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
		    "\u0025\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u002d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u0062" +
		    "\u006f\u006f\u006b\u002e\u0063\u0061\u0070\u006e" +
		    "\u0070\u003a\u0050\u0065\u0072\u0073\u006f\u006e" +
		    "\u002e\u0050\u0068\u006f\u006e\u0065\u004e\u0075" +
		    "\u006d\u0062\u0065\u0072\u0000\u0000\u0000\u0000" +
		    "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
		    "\u002f\u0006\u0085\u00d5\u0004\u00bd\u00e0\u0091" +
		    "\u0001\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
		    "\u0054\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
		    "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
		    "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
		    "\u006e\u0075\u006d\u0062\u0065\u0072\u0000\u0000" +
		    "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
		    "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u002f\u0006\u0085\u00d5\u0004\u00bd\u00e0\u0091" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
		public static readonly Capnproto.SegmentReader b_91e0bd04d585062f =
		    Capnproto.GeneratedClassSupport.decodeRawBytes(
		    "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
		    "\u002f\u0006\u0085\u00d5\u0004\u00bd\u00e0\u0091" +
		    "\u0025\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
		    "\u00d0\u008a\u009e\u009c\u00b2\u0090\u004e\u0081" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
		    "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0025\u0000\u0000\u0000\u004f\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u0062" +
		    "\u006f\u006f\u006b\u002e\u0063\u0061\u0070\u006e" +
		    "\u0070\u003a\u0050\u0065\u0072\u0073\u006f\u006e" +
		    "\u002e\u0050\u0068\u006f\u006e\u0065\u004e\u0075" +
		    "\u006d\u0062\u0065\u0072\u002e\u0054\u0079\u0070" +
		    "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
		    "\u000c\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u001d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0015\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\r\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u006d\u006f\u0062\u0069\u006c\u0065\u0000\u0000" +
		    "\u0068\u006f\u006d\u0065\u0000\u0000\u0000\u0000" +
		    "\u0077\u006f\u0072\u006b\u0000\u0000\u0000\u0000" + "");
		public static readonly Capnproto.SegmentReader b_bb0b2bd4bdc3693d =
		    Capnproto.GeneratedClassSupport.decodeRawBytes(
		    "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
		    "\u003d\u0069\u00c3\u00bd\u00d4\u002b\u000b\u00bb" +
		    "\u0019\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
		    "\u0018\u00bc\u00e8\u0032\u0098\u008e\u0080\u0098" +
		    "\u0004\u0000\u0007\u0000\u0001\u0000\u0004\u0000" +
		    "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0015\u0000\u0000\u0000\"\u0001\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u001d\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u0062" +
		    "\u006f\u006f\u006b\u002e\u0063\u0061\u0070\u006e" +
		    "\u0070\u003a\u0050\u0065\u0072\u0073\u006f\u006e" +
		    "\u002e\u0065\u006d\u0070\u006c\u006f\u0079\u006d" +
		    "\u0065\u006e\u0074\u0000\u0000\u0000\u0000\u0000" +
		    "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
		    "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0061\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
		    "\u0001\u0000\u00fe\u00ff\u0003\u0000\u0000\u0000" +
		    "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0069\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
		    "\u0002\u0000\u00fd\u00ff\u0003\u0000\u0000\u0000" +
		    "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0071\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
		    "\u0003\u0000\u00fc\u00ff\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0075\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0074\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u0080\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
		    "\u0075\u006e\u0065\u006d\u0070\u006c\u006f\u0079" +
		    "\u0065\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0065\u006d\u0070\u006c\u006f\u0079\u0065\u0072" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0073\u0063\u0068\u006f\u006f\u006c\u0000\u0000" +
		    "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0073\u0065\u006c\u0066\u0045\u006d\u0070\u006c" +
		    "\u006f\u0079\u0065\u0064\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
		public static readonly Capnproto.SegmentReader b_f934d9b354a8a134 =
		    Capnproto.GeneratedClassSupport.decodeRawBytes(
		    "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
		    "\u0034\u00a1\u00a8\u0054\u00b3\u00d9\u0034\u00f9" +
		    "\u0012\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
		    "\u0074\u00e1\u006e\u00f8\u0019\u002e\u00b3\u009e" +
		    "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
		    "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u001d\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u0062" +
		    "\u006f\u006f\u006b\u002e\u0063\u0061\u0070\u006e" +
		    "\u0070\u003a\u0041\u0064\u0064\u0072\u0065\u0073" +
		    "\u0073\u0042\u006f\u006f\u006b\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
		    "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\r\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u0024\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
		    "\u0070\u0065\u006f\u0070\u006c\u0065\u0000\u0000" +
		    "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
		    "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0018\u00bc\u00e8\u0032\u0098\u008e\u0080\u0098" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
		    "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
	}
}
}

